#!/bin/bash

# Rust'ın kurulum yeri
RUSTUP_HOME="$HOME/.rustup"
CARGO_HOME="$HOME/.cargo"

# Rust ortam değişkenlerini yükle
load_rust() {
    export RUSTUP_HOME
    export CARGO_HOME
    export PATH="$CARGO_HOME/bin:$PATH"
    if [ -f "$HOME/.cargo/env" ]; then
        source "$HOME/.cargo/env"
    fi
}

# Rust için gerekli sistem bağımlılıklarını yükle
install_dependencies() {
    echo "Gerekli bağımlılıklar yükleniyor..."
    if command -v apt &> /dev/null; then
        sudo apt update && sudo apt install -y build-essential libssl-dev curl
    elif command -v yum &> /dev/null; then
        sudo yum groupinstall 'Development Tools' && sudo yum install -y openssl-devel curl
    elif command -v dnf &> /dev/null; then
        sudo dnf groupinstall 'Development Tools' && sudo dnf install -y openssl-devel curl
    elif command -v pacman &> /dev/null; then
        sudo pacman -Syu base-devel openssl curl
    fi
}

# Sistem bağımlılıklarını yükle
install_dependencies

# Rust'ın yüklü olup olmadığını kontrol et
if command -v rustup &> /dev/null; then
    echo "Rust zaten yüklü."
    read -p "Rust'ı yeniden yüklemek veya güncellemek ister misiniz? (y/n): " choice
    if [[ "$choice" == "y" ]]; then
        echo "Yeniden yükleniyor..."
        rustup self uninstall -y
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    fi
else
    echo "Rust yüklü değil. Yükleniyor..."
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
fi

# Rust ortamını yükle
load_rust 

# Rust dizinlerinin izinlerini düzelt
echo "Rust dizinleri için doğru izinler ayarlanıyor..."
chmod -R 755 "$RUSTUP_HOME"
chmod -R 755 "$CARGO_HOME"

# Cargo'nun mevcut olup olmadığını kontrol et
check_cargo() {
    local max_retries=3
    local retry_count=0

    while [ $retry_count -lt $max_retries ]; do
        if command -v cargo &> /dev/null; then
            echo "Cargo mevcut."
            return 0
        else
            echo "Cargo bulunamadı. Ortamı yeniden yüklüyoruz..."
            source "$HOME/.cargo/env"
            ((retry_count++))
        fi
    done

    echo "Hata: Cargo $max_retries denemeden sonra hala tanınmıyor."
    echo "Lütfen ortamı manuel olarak yüklemek için şu komutu çalıştırın: source \$HOME/.cargo/env"
    return 1
}

# Rust ve Cargo sürümlerini kontrol et
rust_version=$(rustc --version)
cargo_version=$(cargo --version)

echo "Rust sürümü: $rust_version"
echo "Cargo sürümü: $cargo_version"

# Ortam değişkenlerini .bashrc veya .zshrc dosyasına ekle
if [[ $SHELL == *"zsh"* ]]; then
    PROFILE="$HOME/.zshrc"
else
    PROFILE="$HOME/.bashrc"
fi

# Ortam değişkenlerini ekle
if ! grep -q "CARGO_HOME" "$PROFILE"; then
    echo "Ortam değişkenleri ekleniyor..."
    {
        echo 'export RUSTUP_HOME="$HOME/.rustup"'
        echo 'export CARGO_HOME="$HOME/.cargo"'
        echo 'export PATH="$CARGO_HOME/bin:$PATH"'
        echo 'source "$HOME/.cargo/env"'
    } >> "$PROFILE"
fi

# Profil dosyasını yeniden yükle
source "$PROFILE"
source "$HOME/.cargo/env"

# Cargo'yu kontrol et
check_cargo
if [ $? -ne 0 ]; then
    exit 1
fi

echo "Rust kurulumu ve ayarları tamamlandı!"
